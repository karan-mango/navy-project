const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');

const port = 3000;

const app = express();
app.use(express.json());
app.use(cors());

mongoose.connect('mongodb://localhost:27017/newdb1', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const schema = new mongoose.Schema({
  name: String,
  age: String,
});

const model = mongoose.model('collection1', schema);

app.get('/', async (req, res) => {
  const data = await model.find();
  res.json(data);
});

app.post('/', async (req, res) => {
  const newData = new model(req.body);
  await newData.save();
  const data = await model.find();
  res.json(data);
});

app.put('/:id', async (req, res) => {
  await model.findByIdAndUpdate(req.params.id, req.body);
  const data = await model.find();
  res.json(data);
});

app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});























// the below is the react application

import axios from 'axios';
import React, { useEffect, useState } from 'react';

export default function App() {
  const [data, setData] = useState({ name: '', age: '' });
  const [users, setUsers] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null);

  function f1(e) {
    const { name, value } = e.target;
    setData((p) => ({
      ...p,
      [name]: value,
    }));
  }

  useEffect(() => {
    axios.get('http://localhost:3000/').then((res) => {
      setUsers(res.data);
    });
  }, []);

  function f2() {
    axios.post('http://localhost:3000/', data).then((res) => {
      setUsers(res.data);
    });
  }

  function f3(user) {
    setSelectedUser(user);
    setData(user);
  }

  function f4() {
    if (selectedUser) {
      axios.put(`http://localhost:3000/${selectedUser._id}`, data).then((res) => {
        setUsers(res.data);
        setSelectedUser(null);
        setData({ name: '', age: '' });
      });
    }
  }

  return (
    <div className="p-4">
      <div className="mb-4">
        <input
          type="text"
          value={data.name}
          onChange={f1}
          name="name"
          placeholder="Name"
          className="border p-2 mr-2"
        />
        <input
          type="text"
          value={data.age}
          onChange={f1}
          name="age"
          placeholder="Age"
          className="border p-2 mr-2"
        />
        <button onClick={selectedUser ? f4 : f2} className="bg-blue-500 text-white p-2">
          {selectedUser ? 'Update' : 'Submit'}
        </button>
      </div>
      <table className="min-w-full border-collapse border border-gray-400">
        <thead>
          <tr>
            <th className="border border-gray-400 p-2">Name</th>
            <th className="border border-gray-400 p-2">Age</th>
            <th className="border border-gray-400 p-2">Actions</th>
          </tr>
        </thead>
        <tbody>
          {users.map((user) => (
            <tr key={user._id}>
              <td className="border border-gray-400 p-2">{user.name}</td>
              <td className="border border-gray-400 p-2">{user.age}</td>
              <td className="border border-gray-400 p-2">
                <button
                  onClick={() => f3(user)}
                  className="bg-yellow-500 text-white p-1 mr-2"
                >
                  Edit
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}
